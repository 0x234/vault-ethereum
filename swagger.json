{
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Copyright Â© 2018 Immutability, LLC\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.",
    "title": "Vault-Ethereum API",
    "contact": {
      "name": "Jeff Ploughman",
      "url": "https://immutability.io",
      "email": "jeff@immutability.io"
    },
    "license": {
      "name": "Apache2",
      "url": "https://opensource.org/licenses/Apache-2.0"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8200",
  "basePath": "/v1/ethereum",
  "paths": {
    "/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Handler returning the list of accounts.",
        "operationId": "pathAccountsList",
        "parameters": [
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "List",
            "description": "So that we can get the list from Vault.  Do not change this.",
            "name": "list",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/KeyListResponse"
          }
        }
      }
    },
    "/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Handler returning the list of addresses.",
        "operationId": "pathAddressesList",
        "parameters": [
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "List",
            "description": "So that we can get the list from Vault.  Do not change this.",
            "name": "list",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/KeyListResponse"
          }
        }
      }
    },
    "/addresses/{address}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Handler returning Account Names for an Address.",
        "operationId": "pathAddressesRead",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Address",
            "description": "The address to lookup",
            "name": "address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AccountNamesResponse"
          }
        }
      }
    },
    "/addresses/{address}/balance": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Handler returning the balance for an address.",
        "operationId": "pathAccountBalanceReadByAddress",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Address",
            "description": "The address to lookup",
            "name": "address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddressBalanceResponse"
          }
        }
      }
    },
    "/addresses/{address}/verify": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Handler verifying that this account signed some data.",
        "operationId": "pathAddressesVerify",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Address",
            "description": "The address to lookup",
            "name": "address",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "x-go-name": "Data"
                },
                "signature": {
                  "type": "string",
                  "x-go-name": "Signature"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddressesVerifiedResponse"
          }
        }
      }
    },
    "/config": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Handler which reads and returns the configuration for the plugin.",
        "operationId": "pathReadConfig",
        "responses": {
          "200": {
            "$ref": "#/responses/ConfigResponse"
          }
        }
      },
      "put": {
        "description": "\nNote, an empty body sets the defaults of rinkeby",
        "tags": [
          "Config"
        ],
        "summary": "Handler which updates the configuration for the plugin.",
        "operationId": "pathCreateConfig",
        "parameters": [
          {
            "x-go-name": "Data",
            "description": "The conversion inputs",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "api_key": {
                  "type": "string",
                  "x-go-name": "ApiKey"
                },
                "bound_cidr_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "BoundCidrList"
                },
                "chain_id": {
                  "type": "string",
                  "x-go-name": "ChainId"
                },
                "rpc_url": {
                  "type": "string",
                  "x-go-name": "RpcUrl"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ConfigResponse"
          }
        }
      },
      "post": {
        "description": "\nNote, an empty body sets the defaults of rinkeby",
        "tags": [
          "Config"
        ],
        "summary": "Handler which updates the configuration for the plugin.",
        "operationId": "pathCreateConfig",
        "parameters": [
          {
            "x-go-name": "Data",
            "description": "The conversion inputs",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "api_key": {
                  "type": "string",
                  "x-go-name": "ApiKey"
                },
                "bound_cidr_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "BoundCidrList"
                },
                "chain_id": {
                  "type": "string",
                  "x-go-name": "ChainId"
                },
                "rpc_url": {
                  "type": "string",
                  "x-go-name": "RpcUrl"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ConfigResponse"
          }
        }
      }
    },
    "/convert": {
      "put": {
        "description": "### This endpoint will convert one Ethereum unit to another.\n\n## Inputs:\n\n Name    | Type     | Required | Description                |\n ------- | -------- | -------- | -------------------------- |\n amount   | string    | true  | Specifies amount to convert. |\n unit_from   | string    | true  | Specifies unit to convert from. |\n unit_to   | string    | true  | Specifies unit to convert to. |",
        "tags": [
          "Convert"
        ],
        "summary": "Handler returning various ETH conversions.",
        "operationId": "pathConvertWrite",
        "parameters": [
          {
            "x-go-name": "Data",
            "description": "The conversion inputs",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string",
                  "x-go-name": "AmountIn"
                },
                "unit_from": {
                  "type": "string",
                  "x-go-name": "UnitFromIn"
                },
                "unit_to": {
                  "type": "string",
                  "x-go-name": "UnitToIn"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ConversionResponse"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "X-Vault-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "x-meta-array": [
    "value1",
    "value2"
  ],
  "x-meta-array-obj": [
    {
      "name": "obj",
      "value": "field"
    }
  ],
  "x-meta-value": "value"
}