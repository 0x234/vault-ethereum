{
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Copyright Â© 2018 Immutability, LLC\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.",
    "title": "Vault-Ethereum API",
    "contact": {
      "name": "Jeff Ploughman",
      "url": "https://immutability.io",
      "email": "jeff@immutability.io"
    },
    "license": {
      "name": "Apache2",
      "url": "https://opensource.org/licenses/Apache-2.0"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8200",
  "basePath": "/v1",
  "paths": {
    "/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Handler returning the list of accounts.",
        "operationId": "pathAccountsList",
        "parameters": [
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "List",
            "description": "So that we can get the list from Vault.  Do not change this.",
            "name": "list",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "KeyListResponse",
            "schema": {
              "$ref": "#/definitions/KeyListResponse"
            }
          }
        }
      }
    },
    "/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Handler returning the list of addresses.",
        "operationId": "pathAddressesList",
        "parameters": [
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "List",
            "description": "So that we can get the list from Vault.  Do not change this.",
            "name": "list",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "KeyListResponse",
            "schema": {
              "$ref": "#/definitions/KeyListResponse"
            }
          }
        }
      }
    },
    "/addresses/{address}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Handler returning Account Names for an Address.",
        "operationId": "pathAddressesRead",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Address",
            "description": "The address to lookup",
            "name": "address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "AccountNamesResponse",
            "schema": {
              "$ref": "#/definitions/AccountNamesResponse"
            }
          }
        }
      }
    },
    "/addresses/{address}/balance": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Handler returning the balance for an address.",
        "operationId": "pathAccountBalanceReadByAddress",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Address",
            "description": "The address to lookup",
            "name": "address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "AddressBalanceResponse",
            "schema": {
              "$ref": "#/definitions/AddressBalanceResponse"
            }
          }
        }
      }
    },
    "/addresses/{address}/verify": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Handler verifying that this account signed some data.",
        "operationId": "pathAddressesVerify",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Address",
            "description": "The address to lookup",
            "name": "address",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "x-go-name": "Data"
                },
                "signature": {
                  "type": "string",
                  "x-go-name": "Signature"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AddressesVerifiedResponse",
            "schema": {
              "$ref": "#/definitions/AddressesVerifiedResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/config": {
      "get": {
        "description": "### This endpoint returns the configuration of a plugin at a mount.\n\nNote, an empty body sets the defaults of rinkeby\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |",
        "tags": [
          "Config"
        ],
        "summary": "Handler which reads and returns the configuration for the plugin.",
        "operationId": "pathReadConfig",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ConfigResponse",
            "schema": {
              "$ref": "#/definitions/ConfigResponse"
            }
          }
        }
      },
      "put": {
        "description": "### This endpoint configures the plugin at a mount.\n\nNote, an empty body sets the defaults of rinkeby\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |\n rpc_url   | string    | false  | https://rinkeby.infura.io | Specifies the RPC URL of the Ethereum node. |\n chain_id   | string    | false  | 4 |  Specifies the Ethereum network. Defaults to Rinkeby. |\n bound_cidr_list   | string    | false  | | Comma delimited list of allowed CIDR blocks. |\n api_key   | string    | false  | | The Infura API key. |",
        "tags": [
          "Config"
        ],
        "summary": "Handler which updates the configuration for the plugin.",
        "operationId": "pathUpdateConfig",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Data",
            "description": "The conversion inputs",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "api_key": {
                  "type": "string",
                  "x-go-name": "ApiKey"
                },
                "bound_cidr_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "BoundCidrList"
                },
                "chain_id": {
                  "type": "string",
                  "x-go-name": "ChainId"
                },
                "rpc_url": {
                  "type": "string",
                  "x-go-name": "RpcUrl"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ConfigResponse",
            "schema": {
              "$ref": "#/definitions/ConfigResponse"
            }
          }
        }
      },
      "post": {
        "description": "### This endpoint configures the plugin at a mount.\n\nNote, an empty body sets the defaults of rinkeby\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |\n rpc_url   | string    | false  | https://rinkeby.infura.io | Specifies the RPC URL of the Ethereum node. |\n chain_id   | string    | false  | 4 |  Specifies the Ethereum network. Defaults to Rinkeby. |\n bound_cidr_list   | string    | false  | | Comma delimited list of allowed CIDR blocks. |\n api_key   | string    | false  | | The Infura API key. |",
        "tags": [
          "Config"
        ],
        "summary": "Handler which creates the configuration for the plugin.",
        "operationId": "pathCreateConfig",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Data",
            "description": "The conversion inputs",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "api_key": {
                  "type": "string",
                  "x-go-name": "ApiKey"
                },
                "bound_cidr_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "BoundCidrList"
                },
                "chain_id": {
                  "type": "string",
                  "x-go-name": "ChainId"
                },
                "rpc_url": {
                  "type": "string",
                  "x-go-name": "RpcUrl"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ConfigResponse",
            "schema": {
              "$ref": "#/definitions/ConfigResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/convert": {
      "put": {
        "description": "### This endpoint will convert one Ethereum unit to another.\n\n## Inputs:\n\n Name    | Type     | Required | Description                |\n ------- | -------- | -------- | -------------------------- |\n mount-path   | string    | true  | The endpoint configured for the plugin mount. |\n amount   | string    | true  | Specifies amount to convert. |\n unit_from   | string    | true  | Specifies unit to convert from. |\n unit_to   | string    | true  | Specifies unit to convert to. |",
        "tags": [
          "Convert"
        ],
        "summary": "Handler returning various ETH conversions.",
        "operationId": "pathConvertWrite",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Data",
            "description": "The conversion inputs",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string",
                  "x-go-name": "AmountIn"
                },
                "unit_from": {
                  "type": "string",
                  "x-go-name": "UnitFromIn"
                },
                "unit_to": {
                  "type": "string",
                  "x-go-name": "UnitToIn"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ConversionResponse",
            "schema": {
              "$ref": "#/definitions/ConversionResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountNamesResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-name": "Names"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "AddressBalanceResponse": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "x-go-name": "Address"
            },
            "balance": {
              "type": "string",
              "x-go-name": "Balance"
            },
            "balance_in_usd": {
              "type": "boolean",
              "x-go-name": "BalanceInUsd"
            }
          }
        },
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "AddressRequest": {
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "address": {
          "description": "The address to lookup\n\nin: path",
          "type": "string",
          "x-go-name": "Address"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "AddressVerifyRequest": {
      "type": "object",
      "required": [
        "address",
        "data"
      ],
      "properties": {
        "address": {
          "description": "The address to lookup\n\nin: path",
          "type": "string",
          "x-go-name": "Address"
        },
        "data": {
          "description": "in: body",
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "x-go-name": "Data"
            },
            "signature": {
              "type": "string",
              "x-go-name": "Signature"
            }
          },
          "x-go-name": "Data"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "AddressesVerifiedResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "x-go-name": "Address"
            },
            "signature": {
              "type": "string",
              "x-go-name": "Signature"
            },
            "verified": {
              "type": "boolean",
              "x-go-name": "Verified"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "BaseResponse": {
      "description": "BaseResponse stores the names of the account to allow reverse lookup by address",
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ConfigRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "The conversion inputs\n\nin: body",
          "type": "object",
          "properties": {
            "api_key": {
              "type": "string",
              "x-go-name": "ApiKey"
            },
            "bound_cidr_list": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-name": "BoundCidrList"
            },
            "chain_id": {
              "type": "string",
              "x-go-name": "ChainId"
            },
            "rpc_url": {
              "type": "string",
              "x-go-name": "RpcUrl"
            }
          },
          "x-go-name": "Data"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ConfigResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "api_key": {
              "type": "string",
              "x-go-name": "ApiKey"
            },
            "bound_cidr_list": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-name": "BoundCidrList"
            },
            "chain_id": {
              "type": "string",
              "x-go-name": "ChainId"
            },
            "rpc_url": {
              "type": "string",
              "x-go-name": "RpcUrl"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ConversionRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "The conversion inputs\n\nin: body",
          "type": "object",
          "properties": {
            "amount": {
              "type": "string",
              "x-go-name": "AmountIn"
            },
            "unit_from": {
              "type": "string",
              "x-go-name": "UnitFromIn"
            },
            "unit_to": {
              "type": "string",
              "x-go-name": "UnitToIn"
            }
          },
          "x-go-name": "Data"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ConversionResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "amount_from": {
              "type": "string",
              "x-go-name": "AmountFrom"
            },
            "amount_to": {
              "type": "string",
              "x-go-name": "AmountTo"
            },
            "unit_from": {
              "type": "string",
              "x-go-name": "UnitFrom"
            },
            "unit_to": {
              "type": "string",
              "x-go-name": "UnitTo"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "KeyListResponse": {
      "description": "Returns a list of keys",
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "keys": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-name": "Keys"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ListRequest": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "description": "So that we can get the list from Vault.  Do not change this.\n\nin: query",
          "type": "boolean",
          "default": true,
          "x-go-name": "List"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "MountPath": {
      "type": "object",
      "required": [
        "mount-path"
      ],
      "properties": {
        "mount-path": {
          "description": "The endpoint configured for the plugin mount\n\nin: path",
          "type": "string",
          "x-go-name": "MountPath"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "X-Vault-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "x-meta-array": [
    "value1",
    "value2"
  ],
  "x-meta-array-obj": [
    {
      "name": "obj",
      "value": "field"
    }
  ],
  "x-meta-value": "value"
}