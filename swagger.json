{
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Copyright Â© 2018 Immutability, LLC\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.",
    "title": "Vault-Ethereum API",
    "contact": {
      "name": "Jeff Ploughman",
      "url": "https://immutability.io",
      "email": "jeff@immutability.io"
    },
    "license": {
      "name": "Apache2",
      "url": "https://opensource.org/licenses/Apache-2.0"
    },
    "version": "0.0.1"
  },
  "host": "8200.  To get setup with a local development environment, check here:  https://github.com/immutability-io/immutability-project/blob/master/VAULT.md",
  "basePath": "/v1",
  "paths": {
    "/{mount-path}/accounts": {
      "get": {
        "description": "### This endpoint will list all accounts stores at a path.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the accounts to list. This is specified as part of the URL. |",
        "tags": [
          "Accounts"
        ],
        "summary": "Handler returning the list of accounts.",
        "operationId": "pathAccountsList",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "List",
            "description": "So that we can get the list from Vault.  Do not change this.",
            "name": "list",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "KeyListResponse",
            "schema": {
              "$ref": "#/definitions/KeyListResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/accounts/{name}": {
      "get": {
        "description": "### This endpoint will list details about the Ethereum account at a path.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |\n name   | string    | true  | | Specifies the name of the account to read. This is specified as part of the URL. |",
        "tags": [
          "Accounts"
        ],
        "summary": "Handler displays account details",
        "operationId": "pathAccountsRead",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "AccountResponse",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          }
        }
      },
      "put": {
        "description": "### This endpoint will update an account's constraints.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |\n name   | string    | true  | | Specifies the name of the account to update. This is specified as part of the URL. |\n spending_limit_tx   | false    | true  | | The total amount of Wei allowed to be spent in a single transaction. |\n spending_limit_total   | false    | true  | |  The total amount of Wei allowed to be spent for this account. |\n whitelist   | string    | false  | | Comma delimited list of allowed accounts. |\n blacklist   | string    | false  | | Comma delimited list of disallowed accounts. Note: `blacklist` overrides whitelist. |",
        "tags": [
          "Accounts"
        ],
        "summary": "Handler updates an account",
        "operationId": "pathAccountUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "AccountResponse",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          }
        }
      },
      "post": {
        "description": "### This endpoint will create an Ethereum account at a path.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |\n name   | string    | true  | | Specifies the name of the account to create. This is specified as part of the URL. |\n spending_limit_tx   | false    | true  | | The total amount of Wei allowed to be spent in a single transaction. |\n spending_limit_total   | false    | true  | |  The total amount of Wei allowed to be spent for this account. |\n whitelist   | string    | false  | | Comma delimited list of allowed accounts. |\n blacklist   | string    | false  | | Comma delimited list of disallowed accounts. Note: `blacklist` overrides whitelist. |",
        "tags": [
          "Accounts"
        ],
        "summary": "Handler creates an account",
        "operationId": "pathAccountsCreate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "description": "The account to modify",
            "name": "Data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "blacklist": {
                  "type": "string",
                  "x-go-name": "Blacklist"
                },
                "spending_limit_total": {
                  "type": "string",
                  "x-go-name": "SpendingLimitTotal"
                },
                "spending_limit_tx": {
                  "type": "string",
                  "x-go-name": "SpendingLimitTx"
                },
                "whitelist": {
                  "type": "string",
                  "x-go-name": "Whitelist"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AccountResponse",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          }
        }
      },
      "delete": {
        "description": "### This endpoint will delete the account - and its passphrase - from Vault.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |\n name   | string    | true  | | Specifies the name of the account to delete. This is specified as part of the URL. |",
        "tags": [
          "Accounts"
        ],
        "summary": "Handler deletes an account",
        "operationId": "pathAccountsDelete",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/%7B%7D"
          }
        }
      }
    },
    "/{mount-path}/accounts/{name}/contracts": {
      "get": {
        "description": "### This endpoint will list all accounts stores at a path.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |\n name   | string    | true  | | Specifies the name of the account. This is specified as part of the URL. |",
        "tags": [
          "Contracts"
        ],
        "summary": "Handler returning the list of accounts.",
        "operationId": "pathContractsList",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "List",
            "description": "So that we can get the list from Vault.  Do not change this.",
            "name": "list",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "KeyListResponse",
            "schema": {
              "$ref": "#/definitions/KeyListResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/accounts/{name}/contracts/{contract-name}": {
      "post": {
        "description": "### This endpoint will sign a provided Ethereum contract.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |\n name   | string    | true  | | Specifies the name of the account. This is specified as part of the URL. |\n contract-name   | string    | true  | | Specifies the name of the contract. This is specified as part of the URL. |",
        "tags": [
          "Contracts"
        ],
        "summary": "Handler signs a provided Ethereum contract.",
        "operationId": "pathReadContract",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ContractName",
            "description": "The contract name",
            "name": "contract-name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ContractResponse",
            "schema": {
              "$ref": "#/definitions/ContractResponse"
            }
          }
        }
      },
      "delete": {
        "description": "### This endpoint will delete a provided Ethereum contract?  NOT DOCUMENTED IN API.MD!!!!1one!!!ONE111!!\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |\n name   | string    | true  | | Specifies the name of the account. This is specified as part of the URL. |\n contract-name   | string    | true  | | Specifies the name of the contract. This is specified as part of the URL. |",
        "tags": [
          "Contracts"
        ],
        "summary": "Handler deletes a provided Ethereum contract?  NOT DOCUMENTED IN API.MD!!!!1one!!!ONE111!!",
        "operationId": "pathContractsDelete",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ContractName",
            "description": "The contract name",
            "name": "contract-name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/%7B%7D"
          }
        }
      }
    },
    "/{mount-path}/accounts/{name}/debit": {
      "post": {
        "description": "### This endpoint will debit an Ethereum account.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |\n name   | string    | true  | | Specifies the name of the account to use for the debit. This is specified as part of the URL. |\n address_to   | false    | true  | | A Hex string specifying the Ethereum address to send the ETH to. |\n amount   | false    | true  | | The amount of ether - in wei. |\n gas_price   | false    | false  | | - The price in gas for the transaction. If omitted, we will use the suggested gas price. |\n gas_limit   | false    | false  | | The gas limit for the transaction. If omitted, we will estimate the gas limit.. |",
        "tags": [
          "Accounts"
        ],
        "summary": "Handler debits an account",
        "operationId": "pathDebit",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Data",
            "description": "The debit inputs",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address_to": {
                  "type": "string",
                  "x-go-name": "AddressTo"
                },
                "amount": {
                  "type": "string",
                  "x-go-name": "Amount"
                },
                "gas_limit": {
                  "type": "string",
                  "x-go-name": "GasLimit"
                },
                "gas_price": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "GasPrice"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DebitResponse",
            "schema": {
              "$ref": "#/definitions/DebitResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/accounts/{name}/export": {
      "post": {
        "description": "### This endpoint will export a JSON Keystore for use in another wallet.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |\n name   | string    | true  | | Specifies the name of the account. This is specified as part of the URL. |\n path   | string    | true  | | The directory where the JSON keystore file will be exported to. |",
        "tags": [
          "Export"
        ],
        "summary": "Handler exports a JSON Keystore for use in another wallet",
        "operationId": "pathExportCreate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Data",
            "description": "The path to export to",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "x-go-name": "ExportPath"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExportResponse",
            "schema": {
              "$ref": "#/definitions/ExportResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/accounts/{name}/sign": {
      "post": {
        "description": "### This endpoint will sign the provided data.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |\n name   | string    | true  | | Specifies the name of the account to use for signing. This is specified as part of the URL. |\n data   | false    | true  | | Some data. |",
        "tags": [
          "Accounts"
        ],
        "summary": "Handler signs provided data",
        "operationId": "pathSign",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "SignedResponse",
            "schema": {
              "$ref": "#/definitions/SignedResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/accounts/{name}/transfer": {
      "post": {
        "description": "### This endpoint NEEDS TO BE DOCUMENTED - MISSING FROM API.MD.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |",
        "tags": [
          "Accounts"
        ],
        "summary": "Handler NEEDS TO BE DOCUMENTED - MISSING FROM API.MD.",
        "operationId": "pathTransfer",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/%7B%7D"
          }
        }
      }
    },
    "/{mount-path}/accounts/{name}/verify": {
      "post": {
        "description": "### This endpoint will verify that this account signed some data.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | Specifies the path of the account. This is specified as part of the URL. |\n name   | string    | true  | | specifies the name of the account to use for signing. This is specified as part of the URL. |\n data   | false    | true  | | Some data. |\n signature   | false    | true  | | The signature to verify. |",
        "tags": [
          "Accounts"
        ],
        "summary": "Handler verifies that this account signed some data",
        "operationId": "pathVerify",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AccountName",
            "description": "The account name",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "VerifiedResponse",
            "schema": {
              "$ref": "#/definitions/VerifiedResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/addresses": {
      "get": {
        "description": "### This endpoint will list all account addresses.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |",
        "tags": [
          "Addresses"
        ],
        "summary": "Handler returning the list of addresses.",
        "operationId": "pathAddressesList",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "List",
            "description": "So that we can get the list from Vault.  Do not change this.",
            "name": "list",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "KeyListResponse",
            "schema": {
              "$ref": "#/definitions/KeyListResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/addresses/{address}": {
      "get": {
        "description": "### This endpoint will list the names associated with an address.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |\n address   | string    | true  | | Specifies the address of the account to read. This is specified as part of the URL. |",
        "tags": [
          "Addresses"
        ],
        "summary": "Handler returning Account Names for an Address.",
        "operationId": "pathAddressesRead",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Address",
            "description": "The address to lookup",
            "name": "address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "AccountNamesResponse",
            "schema": {
              "$ref": "#/definitions/AccountNamesResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/addresses/{address}/balance": {
      "get": {
        "description": "### This endpoint will return the balance for an address.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |\n address   | string    | true  | | Specifies the address of the account. This is specified as part of the URL. |",
        "tags": [
          "Addresses"
        ],
        "summary": "Handler returning the balance for an address.",
        "operationId": "pathAccountBalanceReadByAddress",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Address",
            "description": "The address to lookup",
            "name": "address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "AddressBalanceResponse",
            "schema": {
              "$ref": "#/definitions/AddressBalanceResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/addresses/{address}/verify": {
      "post": {
        "description": "### This endpoint will verify that this account signed some data.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |\n address   | string    | true  | | Specifies the address of the account to use for signing. This is specified as part of the URL. |\n data   | string    | true  | | Some data. |\n signature   | string    | true  | | The signature to verify. |",
        "tags": [
          "Addresses"
        ],
        "summary": "Handler verifying that this account signed some data.",
        "operationId": "pathAddressesVerify",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Address",
            "description": "The address to lookup",
            "name": "address",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "x-go-name": "Data"
                },
                "signature": {
                  "type": "string",
                  "x-go-name": "Signature"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "VerifiedResponse",
            "schema": {
              "$ref": "#/definitions/VerifiedResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/block/{block-number}": {
      "get": {
        "description": "### This endpoint will read details associated with a block.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |\n block-number   | string    | true  | | Specifies the number of the block to read. This is specified as part of the URL. |",
        "tags": [
          "Blocks"
        ],
        "summary": "Handler returning details associated with a block.",
        "operationId": "pathBlockRead",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "BlockNumber",
            "description": "The block number",
            "name": "block-number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "BlockResponse",
            "schema": {
              "$ref": "#/definitions/BlockResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/block/{block-number}/transactions": {
      "get": {
        "description": "### This endpoint will read transactions associated with a block.\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |\n block-number   | string    | true  | | Specifies the number of the block to read. This is specified as part of the URL. |",
        "tags": [
          "Blocks"
        ],
        "summary": "Handler returning transactions associated with a block.",
        "operationId": "pathBlockTransactionsList",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "BlockNumber",
            "description": "The block number",
            "name": "block-number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "BlockTransactionsResponse",
            "schema": {
              "$ref": "#/definitions/BlockTransactionsResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/config": {
      "get": {
        "description": "### This endpoint returns the configuration of a plugin at a mount.\n\nNote, an empty body sets the defaults of rinkeby\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |",
        "tags": [
          "Config"
        ],
        "summary": "Handler which reads and returns the configuration for the plugin.",
        "operationId": "pathReadConfig",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ConfigResponse",
            "schema": {
              "$ref": "#/definitions/ConfigResponse"
            }
          }
        }
      },
      "put": {
        "description": "### This endpoint configures the plugin at a mount.\n\nNote, an empty body sets the defaults of rinkeby\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |\n rpc_url   | string    | false  | https://rinkeby.infura.io | Specifies the RPC URL of the Ethereum node. |\n chain_id   | string    | false  | 4 |  Specifies the Ethereum network. Defaults to Rinkeby. |\n bound_cidr_list   | string    | false  | | Comma delimited list of allowed CIDR blocks. |\n api_key   | string    | false  | | The Infura API key. |",
        "tags": [
          "Config"
        ],
        "summary": "Handler which updates the configuration for the plugin.",
        "operationId": "pathUpdateConfig",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Data",
            "description": "The conversion inputs",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "api_key": {
                  "type": "string",
                  "x-go-name": "ApiKey"
                },
                "bound_cidr_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "BoundCidrList"
                },
                "chain_id": {
                  "type": "string",
                  "x-go-name": "ChainId"
                },
                "rpc_url": {
                  "type": "string",
                  "x-go-name": "RpcUrl"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ConfigResponse",
            "schema": {
              "$ref": "#/definitions/ConfigResponse"
            }
          }
        }
      },
      "post": {
        "description": "### This endpoint configures the plugin at a mount.\n\nNote, an empty body sets the defaults of rinkeby\n\n## Inputs:\n\n Name    | Type     | Required | Default | Description                |\n ------- | -------- | -------- | ---------| -------------------------- |\n mount-path   | string    | true  | | The endpoint configured for the plugin mount. |\n rpc_url   | string    | false  | https://rinkeby.infura.io | Specifies the RPC URL of the Ethereum node. |\n chain_id   | string    | false  | 4 |  Specifies the Ethereum network. Defaults to Rinkeby. |\n bound_cidr_list   | string    | false  | | Comma delimited list of allowed CIDR blocks. |\n api_key   | string    | false  | | The Infura API key. |",
        "tags": [
          "Config"
        ],
        "summary": "Handler which creates the configuration for the plugin.",
        "operationId": "pathCreateConfig",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Data",
            "description": "The debit inputs",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address_to": {
                  "type": "string",
                  "x-go-name": "AddressTo"
                },
                "amount": {
                  "type": "string",
                  "x-go-name": "Amount"
                },
                "gas_limit": {
                  "type": "string",
                  "x-go-name": "GasLimit"
                },
                "gas_price": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "GasPrice"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ConfigResponse",
            "schema": {
              "$ref": "#/definitions/ConfigResponse"
            }
          }
        }
      }
    },
    "/{mount-path}/convert": {
      "put": {
        "description": "### This endpoint will convert one Ethereum unit to another.\n\n## Inputs:\n\n Name    | Type     | Required | Description                |\n ------- | -------- | -------- | -------------------------- |\n mount-path   | string    | true  | The endpoint configured for the plugin mount. |\n amount   | string    | true  | Specifies amount to convert. |\n unit_from   | string    | true  | Specifies unit to convert from. |\n unit_to   | string    | true  | Specifies unit to convert to. |",
        "tags": [
          "Convert"
        ],
        "summary": "Handler returning various ETH conversions.",
        "operationId": "pathConvertWrite",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MountPath",
            "description": "The endpoint configured for the plugin mount",
            "name": "mount-path",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Data",
            "description": "The conversion inputs",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string",
                  "x-go-name": "AmountIn"
                },
                "unit_from": {
                  "type": "string",
                  "x-go-name": "UnitFromIn"
                },
                "unit_to": {
                  "type": "string",
                  "x-go-name": "UnitToIn"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ConversionResponse",
            "schema": {
              "$ref": "#/definitions/ConversionResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountNameParam": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "The account name\n\nin: path",
          "type": "string",
          "x-go-name": "AccountName"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "AccountNamesResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-name": "Names"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "AccountRequest": {
      "type": "object",
      "required": [
        "Data"
      ],
      "properties": {
        "Data": {
          "description": "The account to modify\n\nin: body",
          "type": "object",
          "properties": {
            "blacklist": {
              "type": "string",
              "x-go-name": "Blacklist"
            },
            "spending_limit_total": {
              "type": "string",
              "x-go-name": "SpendingLimitTotal"
            },
            "spending_limit_tx": {
              "type": "string",
              "x-go-name": "SpendingLimitTx"
            },
            "whitelist": {
              "type": "string",
              "x-go-name": "Whitelist"
            }
          }
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "AccountResponse": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "x-go-name": "Address"
            },
            "balance": {
              "type": "string",
              "x-go-name": "Balance"
            },
            "balance_in_usd": {
              "type": "boolean",
              "x-go-name": "BalanceInUsd"
            },
            "blacklist": {
              "type": "string",
              "x-go-name": "Blacklist"
            },
            "spending_limit_total": {
              "type": "string",
              "x-go-name": "SpendingLimitTotal"
            },
            "spending_limit_tx": {
              "type": "string",
              "x-go-name": "SpendingLimitTx"
            },
            "total_spend": {
              "type": "string",
              "x-go-name": "TotalSpend"
            },
            "whitelist": {
              "type": "string",
              "x-go-name": "Whitelist"
            }
          }
        },
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-name": "AccountReponse",
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "AddressBalanceResponse": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "x-go-name": "Address"
            },
            "balance": {
              "type": "string",
              "x-go-name": "Balance"
            },
            "balance_in_usd": {
              "type": "boolean",
              "x-go-name": "BalanceInUsd"
            }
          }
        },
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "AddressRequest": {
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "address": {
          "description": "The address to lookup\n\nin: path",
          "type": "string",
          "x-go-name": "Address"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "AddressVerifyRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "in: body",
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "x-go-name": "Data"
            },
            "signature": {
              "type": "string",
              "x-go-name": "Signature"
            }
          },
          "x-go-name": "Data"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "BaseResponse": {
      "description": "BaseResponse stores the names of the account to allow reverse lookup by address",
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "BlockNumberParam": {
      "type": "object",
      "required": [
        "block-number"
      ],
      "properties": {
        "block-number": {
          "description": "The block number\n\nin: path",
          "type": "string",
          "x-go-name": "BlockNumber"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "BlockResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "block": {
              "type": "string",
              "x-go-name": "Block"
            },
            "block_hash": {
              "type": "string",
              "x-go-name": "BlockHash"
            },
            "difficulty": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "Difficulty"
            },
            "time": {
              "type": "string",
              "x-go-name": "Time"
            },
            "transaction_count": {
              "type": "string",
              "x-go-name": "TransactionCount"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "BlockTransactionsResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "block": {
                "type": "object",
                "properties": {
                  "address_to": {
                    "type": "string",
                    "x-go-name": "AddressTo"
                  }
                },
                "x-go-name": "Block"
              }
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ConfigRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "The conversion inputs\n\nin: body",
          "type": "object",
          "properties": {
            "api_key": {
              "type": "string",
              "x-go-name": "ApiKey"
            },
            "bound_cidr_list": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-name": "BoundCidrList"
            },
            "chain_id": {
              "type": "string",
              "x-go-name": "ChainId"
            },
            "rpc_url": {
              "type": "string",
              "x-go-name": "RpcUrl"
            }
          },
          "x-go-name": "Data"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ConfigResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "api_key": {
              "type": "string",
              "x-go-name": "ApiKey"
            },
            "bound_cidr_list": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-name": "BoundCidrList"
            },
            "chain_id": {
              "type": "string",
              "x-go-name": "ChainId"
            },
            "rpc_url": {
              "type": "string",
              "x-go-name": "RpcUrl"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ContractNameParam": {
      "type": "object",
      "required": [
        "contract-name"
      ],
      "properties": {
        "contract-name": {
          "description": "The contract name\n\nin: path",
          "type": "string",
          "x-go-name": "ContractName"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ContractRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "The contract inputs\n\nin: body",
          "type": "object",
          "properties": {
            "amount": {
              "type": "string",
              "x-go-name": "Amount"
            },
            "gas_limit": {
              "type": "string",
              "x-go-name": "GasLimit"
            },
            "gas_price": {
              "type": "string",
              "x-go-name": "GasPrice"
            },
            "nonce": {
              "type": "string",
              "x-go-name": "Nonce"
            },
            "transaction_data": {
              "type": "string",
              "x-go-name": "TransactionData"
            }
          },
          "x-go-name": "Data"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ContractResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "transaction_hash": {
              "type": "string",
              "x-go-name": "TransactionHash"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ConversionRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "The conversion inputs\n\nin: body",
          "type": "object",
          "properties": {
            "amount": {
              "type": "string",
              "x-go-name": "AmountIn"
            },
            "unit_from": {
              "type": "string",
              "x-go-name": "UnitFromIn"
            },
            "unit_to": {
              "type": "string",
              "x-go-name": "UnitToIn"
            }
          },
          "x-go-name": "Data"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ConversionResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "amount_from": {
              "type": "string",
              "x-go-name": "AmountFrom"
            },
            "amount_to": {
              "type": "string",
              "x-go-name": "AmountTo"
            },
            "unit_from": {
              "type": "string",
              "x-go-name": "UnitFrom"
            },
            "unit_to": {
              "type": "string",
              "x-go-name": "UnitTo"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "DebitRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "The debit inputs\n\nin: body",
          "type": "object",
          "properties": {
            "address_to": {
              "type": "string",
              "x-go-name": "AddressTo"
            },
            "amount": {
              "type": "string",
              "x-go-name": "Amount"
            },
            "gas_limit": {
              "type": "string",
              "x-go-name": "GasLimit"
            },
            "gas_price": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-name": "GasPrice"
            }
          },
          "x-go-name": "Data"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "DebitResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "string",
              "x-go-name": "Amount"
            },
            "balance": {
              "type": "string",
              "x-go-name": "Balance"
            },
            "from_address": {
              "type": "string",
              "x-go-name": "FromAddress"
            },
            "gas_limit": {
              "type": "string",
              "x-go-name": "GasLimit"
            },
            "gas_price": {
              "type": "string",
              "x-go-name": "GasPrice"
            },
            "to_address": {
              "type": "string",
              "x-go-name": "ToAddress"
            },
            "total_spend": {
              "type": "string",
              "x-go-name": "TotalSpend"
            },
            "transaction_hash": {
              "type": "string",
              "x-go-name": "TransactionHash"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ExportPathParam": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "The path to export to\n\nin: body",
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "x-go-name": "ExportPath"
            }
          },
          "x-go-name": "Data"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ExportResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "passphrase": {
              "type": "string",
              "x-go-name": "Passphrase"
            },
            "path": {
              "type": "string",
              "x-go-name": "Path"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "KeyListResponse": {
      "description": "Returns a list of keys",
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "keys": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-name": "Keys"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "ListRequest": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "description": "So that we can get the list from Vault.  Do not change this.\n\nin: query",
          "type": "boolean",
          "default": true,
          "x-go-name": "List"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "MountPath": {
      "type": "object",
      "required": [
        "mount-path"
      ],
      "properties": {
        "mount-path": {
          "description": "The endpoint configured for the plugin mount\n\nin: path",
          "type": "string",
          "x-go-name": "MountPath"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "SignedResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "x-go-name": "Address"
            },
            "signature": {
              "type": "string",
              "x-go-name": "Signature"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    },
    "VerifiedResponse": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "string",
          "x-go-name": "Auth"
        },
        "data": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "x-go-name": "Address"
            },
            "signature": {
              "type": "string",
              "x-go-name": "Signature"
            },
            "verified": {
              "type": "boolean",
              "x-go-name": "Verified"
            }
          },
          "x-go-name": "Data"
        },
        "lease_duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LeaseDuration"
        },
        "lease_id": {
          "type": "string",
          "x-go-name": "LeaseId"
        },
        "renewable": {
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "request_id": {
          "type": "string",
          "x-go-name": "RequestId"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        },
        "wrap_info": {
          "type": "string",
          "x-go-name": "WrapInfo"
        }
      },
      "x-go-package": "github.com/zambien/vault-ethereum"
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "X-Vault-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "x-meta-array": [
    "value1",
    "value2"
  ],
  "x-meta-array-obj": [
    {
      "name": "obj",
      "value": "field"
    }
  ],
  "x-meta-value": "value"
}